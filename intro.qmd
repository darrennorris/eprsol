# Introdução {#sec-apresent .unnumbered}

O foco aqui é fornecer soluções para as questões em que você precisa executar o código R. Para as questões que requerem interpretação de figuras e compreensão das informações fornecidas nos capítulos serão fornecidas algumas dicas para ajudar e orientar as respostas individuais.


## Organização do codigo no livro

O codigo está organizado em etapas de processamento, com blocos de código em caixas cinzas:

```{r, eval=FALSE}
codigo de R para executar
```

Para segue os passos, os blocos de código precisam ser executados em sequência. Se você pular uma etapa, ou rodar fora de sequência o próximo bloco de código provavelmente não funcionará.

As linhas de codigo de R dentro de cada caixa tambem preciso ser executados em sequência. O simbolo `r kableExtra::text_spec("#", bold = TRUE)` é usado para incluir comentarios sobre os passos no codgio (ou seja, linhas começando com `r kableExtra::text_spec("#", bold = TRUE)` não é codigo de executar).

```{r, eval=FALSE}
# Passo 1
codigo de R passo 1 # texto e numeros tem cores diferentes
# Passo 2
codigo de R passo 2
# Passo 3
codigo de R passo 3
```

Alem disso, os simbolos `r kableExtra::text_spec("#>", bold = TRUE)` e/ou `r kableExtra::text_spec("[1]", bold = TRUE)` no início de uma linha indica o resultado que você verá no console de R.

```{r, echo=TRUE, results='asis', evaluate = TRUE, collapse = TRUE}
# Passo 1
1+1

# Passo 2
x <- 1 + 1
# Passo 3
x

# Passo 4
x + 1

```

```{r}
1 + 1
```

Examples from https://github.com/hadley/r4ds/blob/main/intro.qmd

You can install the complete tidyverse with a single line of code:

```{r}
#| eval: false

install.packages("tidyverse")
```

On your computer, type that line of code in the console, and then press enter to run it. R will download the packages from CRAN and install them on your computer.

## Running R code

The previous section showed you examples of running R code. The code in the book looks like this:

```{r}
#| eval: true
1 + 2
```

If you run the same code in your local console, it will look like this:

```         
> 1 + 2
[1] 3
```

There are two main differences. In your console, you type after the `>`, called the **prompt**; we don't show the prompt in the book. In the book, the output is commented out with `#>`; in your console, it appears directly after your code. These two differences mean that if you're working with an electronic version of the book, you can easily copy code out of the book and paste it into the console.

Throughout the book, we use a consistent set of conventions to refer to code:

-   Functions are displayed in a code font and followed by parentheses, like `sum()` or `mean()`.

-   Other R objects (such as data or function arguments) are in a code font, without parentheses, like `flights` or `x`.

-   Sometimes, to make it clear which package an object comes from, we'll use the package name followed by two colons, like `dplyr::mutate()` or `nycflights13::flights`. This is also valid R code.
